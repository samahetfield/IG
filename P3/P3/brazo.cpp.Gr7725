#include "brazo.h"
#include "base.h"
#include "o3d.h"
#include "cilindro.h"
#include "stdlib.h"
#include "stdio.h"
#include "vertex.h"
#include <GL/glut.h>
#include <math.h>

Brazo::Brazo()
{

}

Brazo::Brazo(Esfera e, Cilindro c1){
    esfera1 = e;
    esfera2 = e;
    barra_sup = c1;
    barra_inf = c1;
}

void Brazo::dibujar(float angulo, unsigned int modo,float aumentar){

    float pos_x = cos(((3*M_PI)/2) + aumentar);
    float pos_y = sin(((3*M_PI)/2) + aumentar);
    float ang =1/tan(aumentar/2);

    switch (modo) {
    case 1:
        glPushMatrix();
        glRotatef(angulo, 0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera1.draw_points();
        glPopMatrix();

        glPushMatrix();
        esfera2 = esfera1;
        glRotatef(180+angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera2.draw_points();
        glPopMatrix();

        glPushMatrix();
        glRotatef(90+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_points();
        glPopMatrix();


        glPushMatrix();
        glRotatef(270+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_points();
        glPopMatrix();

        glPushMatrix();
      //  glRotatef();
       // barra_inf.transformar();
        //barra_inf.draw_points();
        glPopMatrix();
        break;
    case 2:
        glPushMatrix();
            glRotatef(angulo,0,1,0);
            glPushMatrix();
            glRotatef(angulo,0,1,0);
            esfera1.transformar(0.5,0.5,0.5, 2+(2*pos_x),4.1+(2*pos_y),0);
            esfera1.draw_edges();
            glPopMatrix();

            glPushMatrix();
            esfera2 = esfera1;
            glRotatef(180+angulo,0,1,0);
            esfera1.transformar(0.5,0.5,0.5,2+(2*pos_x),4.1+(2*pos_y),0);
            esfera2.draw_edges();
            glPopMatrix();

            glPushMatrix();
            glRotatef(180+angulo,0,1,0);
            //glRotatef(150.61,1,0,0);
            glRotatef(150.61,0,0,1);
            barra_sup.transformar(0.1, 3.312,0.1,2.9,-2.9,0);
            barra_sup.draw_edges();
            glPopMatrix();

       glPopMatrix();

            glPushMatrix();
            glRotatef(270+angulo,0,1,0);
            glRotatef(150.61,1,0,0);
            barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
            barra_sup.draw_edges();
            glPopMatrix();

            glPushMatrix();
            glRotatef(90+angulo,0,1,0);
            glRotatef(30,1,0,0);
            barra_inf.transformar(0.1,2,0.1,0,3.1,-1.25);
            barra_inf.draw_edges();
            glPopMatrix();

            glPushMatrix();
            glRotatef(270+angulo,0,1,0);
            glRotatef(30,1,0,0);
            barra_inf.transformar(0.1,2,0.1,0,3.1,-1.25);
            barra_inf.draw_edges();
            glPopMatrix();

        break;
    case 3:
        glPushMatrix();
        glRotatef(angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera1.draw_solid();
        glPopMatrix();

        glPushMatrix();
        esfera2 = esfera1;
        glRotatef(180+angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera2.draw_solid();
        glPopMatrix();

        glPushMatrix();
        glRotatef(90+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_solid();
        glPopMatrix();


        glPushMatrix();
        glRotatef(270+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_solid();
        glPopMatrix();

        glPushMatrix();
      //  glRotatef();
       // barra_inf.transformar();
        //barra_inf.draw_solid();
        glPopMatrix();
        break;
    case 4:
        glPushMatrix();
        glRotatef(angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera1.draw_chess();
        glPopMatrix();

        glPushMatrix();
        esfera2 = esfera1;
        glRotatef(180+angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera2.draw_chess();
        glPopMatrix();

        glPushMatrix();
        glRotatef(90+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_chess();
        glPopMatrix();


        glPushMatrix();
        glRotatef(270+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_chess();
        glPopMatrix();

        glPushMatrix();
      //  glRotatef();
       // barra_inf.transformar();
        //barra_inf.draw_chess();
        glPopMatrix();
        break;
    case 5:
        glPushMatrix();
        glRotatef(angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera1.draw_all();
        glPopMatrix();

        glPushMatrix();
        esfera2 = esfera1;
        glRotatef(180+angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera2.draw_all();
        glPopMatrix();

        glPushMatrix();
        glRotatef(90+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_all();
        glPopMatrix();


        glPushMatrix();
        glRotatef(270+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_all();
        glPopMatrix();

        glPushMatrix();
      //  glRotatef();
       // barra_inf.transformar();
        //barra_inf.draw_all();
        glPopMatrix();
        break;
    default:
        glPushMatrix();
        glRotatef(angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera1.draw_chess();
        glPopMatrix();

        glPushMatrix();
        esfera2 = esfera1;
        glRotatef(180+angulo,0,1,0);
        esfera1.transformar(0.5,0.5,0.5, 2.25,2.25,0);
        esfera2.draw_chess();
        glPopMatrix();

        glPushMatrix();
        glRotatef(90+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_chess();
        glPopMatrix();


        glPushMatrix();
        glRotatef(270+angulo,0,1,0);
        glRotatef(150.61,1,0,0);
        barra_sup.transformar(0.1, 3.312,0.1,0,-2.9,-2.9);
        barra_sup.draw_chess();
        glPopMatrix();

        glPushMatrix();
      //  glRotatef();
       // barra_inf.transformar();
        //barra_inf.draw_chess();
        glPopMatrix();
        break;
    }

}
